// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Models;

namespace Project.Migrations
{
    [DbContext(typeof(ProjectContext))]
    partial class ProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Project.Models.Camisa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CarrinhoId");

                    b.Property<int>("Quantidade");

                    b.Property<long>("RoupaId");

                    b.HasKey("Id");

                    b.HasIndex("CarrinhoId");

                    b.HasIndex("RoupaId");

                    b.ToTable("Camisa");
                });

            modelBuilder.Entity("Project.Models.Carrinho", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("LojaId");

                    b.HasKey("Id");

                    b.HasIndex("LojaId");

                    b.ToTable("Carrinho");
                });

            modelBuilder.Entity("Project.Models.Loja", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Endereco")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Loja");
                });

            modelBuilder.Entity("Project.Models.Roupa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("LojaId");

                    b.Property<string>("Marca");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("Quantidade");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("Tamanho")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.HasKey("Id");

                    b.HasIndex("LojaId");

                    b.ToTable("Roupa");
                });

            modelBuilder.Entity("Project.Models.Camisa", b =>
                {
                    b.HasOne("Project.Models.Carrinho", "Carrinho")
                        .WithMany("Camisas")
                        .HasForeignKey("CarrinhoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Project.Models.Roupa", "Roupa")
                        .WithMany("Camisas")
                        .HasForeignKey("RoupaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Project.Models.Carrinho", b =>
                {
                    b.HasOne("Project.Models.Loja")
                        .WithMany("Compras")
                        .HasForeignKey("LojaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Project.Models.Roupa", b =>
                {
                    b.HasOne("Project.Models.Loja")
                        .WithMany("Roupas")
                        .HasForeignKey("LojaId");
                });
#pragma warning restore 612, 618
        }
    }
}
